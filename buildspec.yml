version: 0.2

phases:
  pre_build:
    commands:
      - echo Logging into ECR
      - aws ecr get-login-password --region us-west-1 | docker login --username AWS --password-stdin 074121654359.dkr.ecr.us-west-1.amazonaws.com
      - REPO_URI=074121654359.dkr.ecr.us-west-1.amazonaws.com/joetam_proj3 
      - IMAGE_TAG=jt_hon_project
  build:
    commands:
      - echo building image...
      - cd app
      - docker build -t ${IMAGE_TAG} .

  post_build:
    commands:
      - echo running test on image...
      - result=`docker run ${IMAGE_TAG} python /app/test.py | tail -1`
      - echo $result
      - |-
          if [ "$result" = "succeeded" ]; then
            echo testing successfully completed
            docker tag ${IMAGE_TAG} ${REPO_URI}:${IMAGE_TAG}
            docker push ${REPO_URI}:${IMAGE_TAG}
            CODEBUILD_BUILD_SUCCEEDING=0
          else
            echo testing failed
            CODEBUILD_BUILD_SUCCEEDING=1
          fi
      - echo writing artifact for codeDeploy....
      - printf '[{"name":"jtproj3blue","imageUri":"%s"}]' ${REPO_URI}:${IMAGE_TAG} > ${CODEBUILD_SRC_DIR}/codebuildimage.json
      - cat ${CODEBUILD_SRC_DIR}/codebuildimage.json
artifacts:
  files: 
    - ${CODEBUILD_SRC_DIR}/codebuildimage.json
    - appspec.yml
    - taskdef.json
  secondary-artifcats:
    baseartifacts:
      files:
        - appspec.yml
        - taskdef.json
    ImageArtifact:
      files:
        - codebuildimage.json



